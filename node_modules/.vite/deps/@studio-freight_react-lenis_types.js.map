{
  "version": 3,
  "sources": ["../../@studio-freight/react-lenis/dist/types/index.d.ts"],
  "sourcesContent": ["import Lenis, { LenisOptions } from '@studio-freight/lenis';\nimport React, { ForwardRefExoticComponent, PropsWithoutRef, ReactNode, RefAttributes } from 'react';\ntype LenisEventHandler = (lenis: Lenis) => void;\ninterface LenisContextValue {\n    lenis: Lenis;\n    addCallback: (handler: LenisEventHandler, priority: number) => void;\n    removeCallback: (handler: LenisEventHandler) => void;\n}\ndeclare global {\n    interface Window {\n        reactLenisVersion: string;\n    }\n}\nexport declare const LenisContext: React.Context<LenisContextValue | null>;\nexport declare function useLenis(callback?: (lenis: Lenis) => void, deps?: Array<any>, priority?: number): Lenis | undefined;\ntype ForwardRefComponent<P, T> = ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;\ntype Props = {\n    root?: boolean;\n    options?: LenisOptions;\n    autoRaf?: boolean;\n    rafPriority?: number;\n    className?: string;\n    children?: ReactNode;\n    props?: any;\n};\ntype LenisRef = {\n    wrapper?: HTMLElement;\n    content?: HTMLElement;\n    lenis?: Lenis;\n};\ndeclare const ReactLenis: ForwardRefComponent<Props, LenisRef>;\nexport { ReactLenis as Lenis, ReactLenis };\nexport default ReactLenis;\n"],
  "mappings": ";;;AAgCA,IAAO,kBAAQ;",
  "names": []
}
